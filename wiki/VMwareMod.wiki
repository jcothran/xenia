#summary modifications list (installed software, packages, etc) and distribution checklist

<wiki:toc max_depth="6" />

= Mod list =

This is a list of the wmware image modifications/installs which I added to the original http://gisvm.com vmware image (geostatistics version, includes 'R') listed in their install order.

----

file /etc/hosts.allow
{{{
#uncomment below line and add substitute your http ip below for ssh access
#sshd : xxx.xxx.xxx.xxx : allow
sshd : ALL : deny
}}}

other installs

{{{
#controlling ssh access via hosts.allow
sudo apt-get install openssh-server

sudo apt-get install nmap
sudo apt-get install subversion
#svn not currently in sync with latest vmware image so skip following step for now
svn checkout http://xenia.googlecode.com/svn/trunk/ /home/xeniaprod/scripts

#For imageprocessing, use the Imagemagick package.
sudo apt-get install imagemagick

#nfs remote mount
#see http://www.daryl.mu/2009/03/02/howto-set-up-nfs-remote-file-shariing-and-mounting-in-ubuntu
sudo apt-get install nfs-kernel-server nfs-common portmap

#install cpan
perl -MCPAN -e install "Bundle::CPAN"

#install XML::LibXML
sudo apt-get install libxml2-dev
sudo cpan -i "XML::LibXML"

sudo cpan -i "DBD::SQLite"
sudo cpan -i DBD::Pg             #PostGres DBD. NOTE: Don't use "DBD::Pg", odd fail.
sudo apt-get install gnuplot-nox #no X11 windows support
sudo cpan -i "XML::XPath"
sudo cpan -i "Config::IniFiles"
sudo cpan -i Geo::WeatherNWS    #Package for retrieving NWS data.
sudo cpan -i SOAP::Lite

sudo apt-get install ruby
}}}

#NetCDf Perl
{{{ 
For NetCDF, download the perl source [http://www.unidata.ucar.edu/downloads/netcdf-perl/index.jsp Here]
A prerequisite is the netCDF dev package: sudo apt-get install sudo apt-get install libnetcdf-dev
Once libnetcdf-dev is installed, edit the CUSTOMIZE file in the perl NetCDF directory and verify/modify the CPP_NETCDF, LD_NETCDF, and PERL_MANDIR flags.

For UDUNITS, to instead of having to install yacc, you can move the UDUNITS.pm and udunits.dat (conversions data file) to /usr/local/lib/perl/5.8.8
Then move the contents of the auto/UDUNITS directory into /usr/local/lib/perl/5.8.8/auto/UDUNITS. The contents of the directory should be: UDUNITS.so, UDUNITS.bs, and autosplit.ix.
}}}

#Python packages
{{{
sudo apt-get install python-setuptools #Used to install the easy_install package manager
sudo apt-get install python-pysqlite2  #SQLite python DB package.
sudo apt-get install python2.5-psycopg2#PostGres python DB package.
sudo apt-get install python2.5-lxml    #XML parser.
sudo easy_install simplejson           #JSON parser used by the python-twitter package
sudo easy_install python-twitter
sudo easy_install virtualenv           #Used for setting up virtual python environments.

Created direction: /usr/lib/python2.5/site-packages/xeniatools where all of our python libraries go.
}}}


{{{
installed google earth to desktop, but slow display with only OpenGL
== GE uses OpenGL so slow unless optimized for particular graphics card
https://help.ubuntu.com/community/GoogleEarth
http://ohioloco.ubuntuforums.org/showthread.php?t=1067377

 Re: Installing Google Earth
from http://www.google.com/support/forum/...77b9b982&hl=en

1. find the libcrypto.so.0.9.8 file in the google-earth install directory
2. rename it to libcrypto-old or whatever
3. then symlink to the system libcrypto (while in the google-earth directory)

Code:

sudo ln -sv /usr/lib/libcrypto.so.0.9.8 ./
}}}

{{{
sudo cpan -i "Number::Bytes::Human"
}}}

{{{
sudo apt-get install gparted
sudo apt-get install rdate
}}}

= Distribution checklist = 

  * Organization
    * include any image application type installs to mod list
    * include any script/database changes to project svn
  * Storage
    * remove all large sized testing datasets, files ({{{du -h --max-depth=1}}})
    * clear any browser, application caches
    * clear user histories (history -c) or profile changes, info
  * Security
    * return user/passwords to initial test spec or common suggested/known distribution value
    * remove any personal/institution specific information or addresses which should not be circulated
    * return hosts.allow, hosts.deny, iptables or other security related files to clean distribution state
  * Misc
    * disable automated crons as necessary, document to user how to re-enable and expectations
    * check/shutdown any unnecessary or stalled processes ({{{ps -auxf}}})
    * document user setup of any user id's, crontab, file linkages, config files/search labels
    * create a backup image and version release name/number