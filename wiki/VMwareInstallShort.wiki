#summary install short notes for running a server production instance

see also [VMwareInstall] [VMwareHome]

<wiki:toc max_depth="6" />

= Setup =

== network bridge ==

*note - network bridge(this section instruction) only utilized for vmware player and server, not vmware ESXi *

[http://code.google.com/p/xenia/wiki/XeniaUpdates#Additional_server_notes_-_static_IP,_network_bridge,_iptables original documentation]

Wanted to bridge the 'virtual' vmware player server across the 'host' server.  Established my static IP on the host using the following steps.

For the 'virtual' server on the vmplayer menu at screen top, changed the 'Devices->Network Adapter' setting to 'Bridged' which establishes network communication between the virtual server and host.

You may also need to set the radio button 'wired network' from the top menu icon(circled in red) in the following image

<img src="http://xenia.googlecode.com/files/screen_1.jpg" height=300 width=600>

== static ip ==

*required section for proper IP address bridging*

The {{{ifconfig}}} command will tell you which ethernet device the server is trying to communicate on({{{ifconfig -a}}} will show all available devices).  For mine the host server was running 'eth0' and the virtual was running 'eth5'

from http://forums.techarena.in/operating-systems/1106661.htm

for the host the static IP is 129.252.37.90 

In host file /etc/network/interfaces
{{{
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
address 129.252.37.90
netmask 255.255.255.0
gateway 192.252.37.1
}}}

Then restart network with 
{{{
sudo /etc/init.d/networking restart
}}}

Running 'ifconfig' command from virtual host listed ethernet as 'eth5' which is substituted for the 'eth0' and run in the same steps listed above for configuring the static IP for the host except now on the virtual server.

I did not have to modify the defaulted dns file settings for host or virtual server files under /etc/resolv.conf 

----

== iptables ==

*optional section - this section on iptables is informational and can be skipped*

With the network 'bridge' setting in the vmware player, any ports on the virtual server are bridged over the host server (use 'nmap' command to see open ports).  So with the gisvm image opened on the vmplayer I was able to see the apache web server sample webpage running on port 80 and J2EE/tomcat server sample webpage running on port 8080 from other machines.

Currently only have port 80 open to machines outside the university network and wanted to show the geoserver demo applications running on port 8080 so used the following iptables commands (on the virtual server) to port forward 80 to 8080.

from http://www.klawitter.de/tomcat80.html
{{{
iptables -t nat -A OUTPUT -d localhost -p tcp --dport 80 -j REDIRECT --to-ports 8080
iptables -t nat -A OUTPUT -d 129.252.37.90 -p tcp --dport 80 -j REDIRECT --to-ports 8080
iptables -t nat -A PREROUTING -d 129.252.37.90 -p tcp --dport 80 -j REDIRECT --to-ports 8080
}}}

== openssh ==

*required section if ssh access from other networks/IP's is needed*

The initial image runs an openssh daemon which accepts no outside connects via the /etc/hosts.allow file below.  Modify the hosts.allow,hosts.deny files as necessary for access/security purposes.

file /etc/hosts.allow
{{{
#uncomment below line and add substitute your http ip below for ssh access
#sshd : xxx.xxx.xxx.xxx : allow
sshd : ALL : deny
}}}

== image default users, passwords ==

*required section for security purposes*

#reset user passwds to public defaults - user,root,xeniaprod,postgres - as root, passwd <username>

The *root* user has password *root99*.  Modify this password as needed.

The *postgres* user has password *postgres99*.  Modify this password as needed.

The username associated with the xenia development is *xeniaprod* with password *xeniaprod99*  Modify this password as needed.

The username *user* has password *user99* although this user account is not utilized.  Modify this password as needed.

Both users *xeniaprod* and *user* are part of the *admin* group ({{{sudo vi /etc/group}}}) which is a 'sudo' ({{{sudo vi /etc/sudoers}}}) enabled group.

*optional* see the other gisvm related passwords [http://www.vmware.com/appliances/directory/55606 here] and modify as needed.

== host substitutions, configuration ==

*Required section for configuring image to use local IP,system/database passwords and understanding data flow*

*By default as a test, on initial image startup this image will begin trying to hourly access over the web a few kmz files(usgs,nerrs,ndbc) for aggregation to the xenia database and production of several output formats and services.  Check 'flow_' output graphs(.png) under http://localhost/xenia/feeds or http://xxx.xxx.xxx.xxx/xenia/feeds after a few hours to verify feed processing/population.*

If you plan to run a production xenia vmware instance accessible by others on the web, search the xeniaprod code from the following directory to see the necessary localhost substitutions(for your production machine http address) or other configuration options.

see also http://code.google.com/p/xenia/wiki/VMwareDesign#Checklist , http://code.google.com/p/xenia/wiki/VMwareDesign##VM_CONFIG_notes

replace *your_ip* in the below line commands with your IP (xxx.xxx.xxx.xxx)
{{{
cd /home/xeniaprod
find . -name "*" -exec grep -H "VM_CONFIG" {} \; 
perl -p -i -e 's/129.252.37.90/your_ip/g' `find ./ -name "*.pl"`
perl -p -i -e 's/129.252.37.90/your_ip/g' `find ./ -name "*.html"`
perl -p -i -e 's/129.252.37.90/your_ip/g' `find ./ -name "*.xml"`
}}}

{{{
search for #VM_CONFIG in effected files

/etc/hosts.allow  #ssh ip access
/etc/exports #nfs remote mount access

=
#postgres
optional - database size on /usr2, delete old records - vacuum

user passwds - postgres,xeniaprod
psql -U postgres -h xxx.xxx.xxx.xxx
alter user postgres with password 'xxx';
alter user xeniaprod with password 'xxx';

#enable #VM_CONFIG ip addresses
sudo vi /usr2/pg_data/pg_hba.conf

cd /home/xeniaprod/config #database user/password
  dbConfig.ini
  environment_xenia_default.xml

#enable feeds as needed
/home/xeniaprod/cron/getObskml.sh
/home/xeniaprod/cron/mk_xenia_all_latest.sh

search for #VM_CONFIG in effected crons (as user 'xeniaprod', crontab -e)
#start crons - root, xeniaprod

check output graphs(.png) under http://xxx.xxx.xxx.xxx/xenia/feeds after a few hours to verify feed processing/population

}}}

== postgresql or sqlite == 

*optional section - this section can be skipped if default postgresql database is acceptable*

The latest version of the vmware image is configured to utilize a postgresql/postgis relational database while the earlier version utilized a sqlite file-based relational database.

These changes are reflected in the xeniaprod crontab with xeniaflow_postgresql.sh directing the aggregation and product generation towards the /home/xeniaprod/scripts/postgresql branch instead of the /home/xeniaprod/scripts/sqlite one.

Similarly the symbolic links(time_series, sos) under /var/www/xenia are linked to postgresql branch instead of sqlite one.

== miscellaneous ==

*informational section*

*sudo* all commands that need root access.

To sudo between users, use the first user password(user99 in the below example) not the target user password
{{{
user@gisvm:~$ sudo su - xeniaprod
[sudo] password for user:
xeniaprod@gisvm:~$ 
}}}

The *two crontabs* which are active are *root* which performs a nightly cleanup of files under directory /home/xeniaprod/tmp_web and *xeniaprod* which also performs file cleanup but more importantly runs the following main job hourly.

The file */home/xeniaprod/cron/xeniaflow.sh* creates all the subsequent related products and should be referenced to understand the product creation flow.

Xenia related log files are at /home/xeniaprod/tmp and cleared nightly.

Apache user(www-data) created related temporary files are at /home/xeniaprod/tmp_web and cleared nightly.

== ObsKML ==

*optional section*

If you are ready to start pulling new data into your system, see
http://code.google.com/p/xenia/wiki/VMwareTest#Adding_a_new_ObsKML_feed
