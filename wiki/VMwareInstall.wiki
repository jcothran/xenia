#summary running a server production instance

<wiki:toc max_depth="6" />

= network bridge =

*note - network bridge(this section instruction) only utilized for vmware player and server, not vmware ESXi *

[http://code.google.com/p/xenia/wiki/XeniaUpdates#Additional_server_notes_-_static_IP,_network_bridge,_iptables original documentation]

Wanted to bridge the 'virtual' vmware player server across the 'host' server.  Established my static IP on the host using the following steps.

For the 'virtual' server on the vmplayer menu at screen top, changed the 'Devices->Network Adapter' setting to 'Bridged' which establishes network communication between the virtual server and host.

You may also need to set the radio button 'wired network' from the top menu icon(circled in red) in the following image

<img src="http://xenia.googlecode.com/files/screen_1.jpg" height=300 width=600>

= static ip =

The 'ifconfig' command will tell you which ethernet device the server is trying to communicate on.  For mine the host server was running 'eth0' and the virtual was running 'eth5'

from http://forums.techarena.in/operating-systems/1106661.htm

for the host the static IP is 129.252.37.90 

In host file /etc/networking/interfaces
{{{
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
address 129.252.37.90
netmask 255.255.255.0
gateway 192.252.37.1
}}}

Then restart network with 
{{{
sudo /etc/init.d/networking restart
}}}

Running 'ifconfig' command from virtual host listed ethernet as 'eth5' which is substituted for the 'eth0' and run in the same steps listed above for configuring the static IP for the host except now on the virtual server.

I did not have to modify the defaulted dns file settings for host or virtual server files under /etc/resolv.conf 

----

= iptables =

With the network 'bridge' setting in the vmware player, any ports on the virtual server are bridged over the host server (use 'nmap' command to see open ports).  So with the gisvm image opened on the vmplayer I was able to see the apache web server sample webpage running on port 80 and J2EE/tomcat server sample webpage running on port 8080 from other machines.

Currently only have port 80 open to machines outside the university network and wanted to show the geoserver demo applications running on port 8080 so used the following iptables commands (on the virtual server) to port forward 80 to 8080.

from http://www.klawitter.de/tomcat80.html
{{{
iptables -t nat -A OUTPUT -d localhost -p tcp --dport 80 -j REDIRECT --to-ports 8080
iptables -t nat -A OUTPUT -d 129.252.37.90 -p tcp --dport 80 -j REDIRECT --to-ports 8080
iptables -t nat -A PREROUTING -d 129.252.37.90 -p tcp --dport 80 -j REDIRECT --to-ports 8080
}}}

= openssh =

The initial image runs an openssh daemon which accepts no outside connects via the /etc/hosts.allow file below.  Modify the hosts.allow,hosts.deny files as necessary for access/security purposes.

file /etc/hosts.allow
{{{
#uncomment below line and add substitute your http ip below for ssh access
#sshd : xxx.xxx.xxx.xxx : allow
sshd : ALL : deny
}}}

= image default users, passwords =

The username associated with the xenia development is *xeniaprod* with password *xeniaprod999*  Modify this password as needed.

The username *user* has password *user999* although this user account is not utilized.  Modify this password as needed.

See the other gisvm related passwords [http://www.vmware.com/appliances/directory/55606 here] and modify as needed.

= host substitutions, configuration =

If you plan to run a production xenia vmware instance accessible by others on the web, search the xeniaprod code from the following directory to see the necessary localhost substitutions(for your production machine http address) or other configuration options.

{{{
cd /home/xeniaprod
find . -name "*" -exec grep -H "VM_CONFIG" {} \; 
find . -name "*.sh" -exec grep -H "localhost" {} \; 
find . -name "*.pl" -exec grep -H "localhost" {} \;  
find . -name "*.xml" -exec grep -H "localhost" {} \;
}}}

= postgresql or sqlite = 

The latest version of the vmware image is configured to utilize a postgresql/postgis relational database while the earlier version utilized a sqlite file-based relational database.

These changes are reflected in the xeniaprod crontab with xeniaflow_postgresql.sh directing the aggregation and product generation towards the /home/xeniaprod/scripts/postgresql branch instead of the /home/xeniaprod/scripts/sqlite one.

Similarly the symbolic links(time_series, sos) under /var/www/xenia are linked to postgresql branch instead of sqlite one.

= miscellaneous =

*sudo* all commands that need root access.

To sudo between users, use the first user password(user999 in the below example) not the target user password
{{{
user@gisvm:~$ sudo su - xeniaprod
[sudo] password for user:
xeniaprod@gisvm:~$ 
}}}

The *two crontabs* which are active are *root* which performs a nightly cleanup of files under directory /home/xeniaprod/tmp_web and *xeniaprod* which also performs file cleanup but more importantly runs the following main job hourly.

The file */home/xeniaprod/cron/xeniaflow.sh* creates all the subsequent related products and should be referenced to understand the product creation flow.

Xenia related log files are at /home/xeniaprod/tmp and cleared nightly.

Apache user(www-data) created related temporary files are at /home/xeniaprod/tmp_web and cleared nightly.

----
= VMware Server =

Successfully installed VMware Server 2.0.1 on Ubuntu 8.10 

The vmware server is installed via the vmware-install.pl script and starts the services at the end of a successful install.  The vmware server maintenance ui is accessed via browser at http://localhost:8222 or secure port https://localhost:8333

== Problems, workarounds ==

Had a compile error on 'vmsock' but the install said this was not critical to the usual processes.  Not having it compiled does not seem to create any noticeable issue.

One problem I ran into was that VMware server configured vmnet0 (only shows up in the process list 'ps -auxf' not via 'ifconfig' command) to eth0 and eth0 was not bridging ('x' symbol in the server maintenance ui).  Switched vmnet0 over to eth1 via the {{{/usr/bin/vmware-config.pl}}} script which did bridge correctly.

Per each virtual image instance/IP address as configured in the file /etc/network/interfaces, make sure to set your ethx (eth7,eth8,etc)  connection correctly the same as found in the 'ifconfig' listing  setting and restart via {{{/etc/init.d/networking restart}}}  The correct image IP listing should also show up in the vmware server maintenance ui.

vmware images can be referenced on the host machine vmware ui by placing or symbolically linking via the /var/lib/vmware/Virtual Machines folder

Saw some notes regarding ethernet optimization/mishandling issues such as to run the command {{{ethtool -K eth1 sg off rx off tx off tso off}}} but did not utilize this command.
----
= VMware ESXi =

Dan Ramage pointed me to the following article 
http://bsd.slashdot.org/story/09/06/02/0043258/When-VMware-Performanc... 
which 
points out a variety of opinions comparing various virtualization issues - 
one point that is highlighted by the opinions is the use in regards to 
vmware products of the free 'ESXi' product instead of 'vmware server', the 
main difference being that 'ESXi' runs directly on the server(bare-metal) 
and does not suffer some of the performance penalties associated with 
running on a host OS(Operating System).  I'll try the 'ESXi' install at some 
point and glad to hear any feedback in regards to running 'ESXi' instead of 
'vmware server' in regards to server virtualization. 

== Update June 19 2009 = 
Went through the VMware ESXi install process on one of the new Secoora 
servers(Dell Poweredge 2950) here this week - it was very easy and 
straightforward and proceeded the same as documented in the below 15 minute 
video of the same. 
http://vmwarevideos.govirtual.tv/vsphere-esxi-40-install-and-configure/
 
ESXi is the recommended freeware 'bare metal' server install for the vmware 
virtualization stuff.  *vSphere* is the related separate remote desktop 
client(freeware download also from the same ESXi download page) for managing the ESXi instance.  ESXi does not provide a management console *directly on the server* which means that you have to install/utilize *vSphere* to connect to and manage it.

Should have a vmware image for analysis, redundancy/sharing that captures 
most of the earlier aggregation and products scripts developed earlier for 
Secoora http://code.google.com/p/xenia/wiki/VMwareProducts and moving 
forward, still need possible redevelopment in regards to the earlier 
'screen-scraping' moved to web-services(sara and vembu's scripts) and 
Jesse's latest hourly maps as provided via the more recent database schema. 
Also have refocused the scripts back towards a Postgresql database initial 
use focus(due to multi-user/developer needs in-house between Dan and myself 
and the popularity of Xenia/postgresql within the IOOS community) and Sqlite 
more as a optional secondary or file archive purpose. 

It was the ESXi 4.0 instance(64-bit) - after signing up with a vmware user
account it will send you an email activation link with the license code.
 The license code can be entered via the VSphere managment interface
immediately or at the end of the 60 day evaluation (the full ESXi product I
believe).
The only snafus I ran into was installing ESXi to 'Disk1' controller first,
the machine only wanted to boot off of 'Disk0' so reran with Disk0 as the
option.

Also having to work through getting the usual static IP, DNS issues
and remote port access from my desktop subnet to the ESXi server IP.  Be sure to get your netmask and default gateway settings correct in the ESXi interface - I set my netmask to 255.255.0.0 so that I could manage the server(at 129.252.37.x) from a different subnet(129.252.139.x).

The last two things to be aware of is that I needed to download the *vCenter converter* (VMware vCenter Converter Standalone 4.0.1 http://www.vmware.com/download/converter/ ) to my windows desktop and convert my earlier vmware server image to an ESXi image (the converter application supports a variety of other conversions as well).

When moving my earlier vmware image to my desktop I did run into a 2 gigabyte file size limitation with a samba mount(smbfs), which was addressed by mounting as 'cifs' instead which does not have the file size limitation

#2 GB file size limit for smbfs (use cifs)
{{{mount -t cifs -o username=xxx,password=xxx,workgroup=xxx //xxx.xxx.xxx.xxx/temp /temp}}}

After migrating/converting and powering on the vmware image, I had to assign the correct IP as detailed at http://code.google.com/p/xenia/wiki/VMwareInstall#static_ip