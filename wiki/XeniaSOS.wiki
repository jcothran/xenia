#summary SOS (Sensor Observing Service) related Xenia development/documentation

= [XeniaSOS#difSOS difSOS] =

Built a CGI based script based on earlier work with the [XeniaPackageSqlite#MicroWFS microWFS] effort, substituting a xenia database schema specific sql query and associated [http://ioos.noaa.gov/program/DIFdocs.html DIF] SOS response instead of the earlier more generic query and WFS response.

The CGI based difSOS instance is available at

http://carocoops.org/obskml/scripts/difSOS.html

The above html script calls the cgi script documented at [http://code.google.com/p/xenia/source/browse/trunk/sqlite/sos/difSOS.cgi difSOS.cgi] which runs queries against the earlier established xenia sqlite database.  *Note that the sql request statement of this script could be modified to provide a similar resultset/functionality from other relational database schemas or resultsets.*

[http://code.google.com/p/xenia/source/browse/trunk/sqlite/sos/difSOSConf.xml difSOSConf.xml] is the modified xml configuration support xml

Note:

   * data is across a variety of data providers nationally for the latest 3 day period(time window could be enlarged as needed) - archival julian weekly sqlite files are available at http://carocoops.org/seacoos_data/sqlite/weekly
   * observation elevation datum is optional or assumed MSL(Mean Sea Level)
   * the sensorID is related to an internal database/system frame of reference and not related to any developing or recognized community sensorID reference
   * the OBSERVEDPROPERTY parameter assumes one sensor per platform (for now)
   * the OBSERVEDPROPERTY parameter only specifies a single parameter (for now)
   * the xml response is xml/text only (for now) and the response can be quite large depending on the query - would like to eventually provide a zipped response or file link for large responses ?

= minimal dataflow setup =

   * Convert [http://nautilus.baruch.sc.edu/twiki_dmcc/bin/view/Main/ObsKMLGenerate#Sample_cases raw data to obskml]
   * Convert [http://code.google.com/p/xenia/source/browse/trunk/sqlite/import_export/obskml_to_xenia_sqlite.pl obskml to xenia schema(sql)]
   * Use [http://code.google.com/p/xenia/source/browse/trunk/sqlite/sos difSOS.cgi] script to provide DIF SOS web service

----

= [XeniaSOS#Related_Links Related Links] =

http://xi.nos.noaa.gov/dif/ (Draft webpage)

http://carocoops.org/documents/IOOS_SOS_Implementations.ppt

IOOS-DIF XML Schemas http://www.csc.noaa.gov/ioos/schema/IOOS-DIF/

IOOS WSDE (Web Services & Data
Encoding) listserv http://www.pmel.noaa.gov/maillists/tmap/ioos_wsde/

NDBC SOS http://sdf.ndbc.noaa.gov/sos

CO-OPS SOS http://opendap.co-ops.nos.noaa.gov/ioos-dif-sos/

----

= Ongoing development requests =

In addition to sensor/SensorML/SWE metadata development I would also like to see development/support relating to service efficiencies for:
 
  * *primitives*/subsetting as discussed earlier 
  * *collections*(give me some/all of your latest/time-range obs from a specified platform/bbox in one request instead of multiple specific/researched requests)
    * under the offering category beyond the initial development pass of offering = specific platform, will also be interested in aggregate offering(s) that range from less-specific to more-specific like
      * *all* observed properties for *latest* time for a given bounding box
      * specific observed properties for *latest* time for a given bounding box
      * *all* observed properties for time-range for a given bounding box
      * specific observed properties for time-range for a given bounding box 
        * where the above type collection request might fail due to being too 'large' of a data request, provide an error response suggesting acceptable limits/guidelines on the request(size of bounding box,etc)
    * These general method types could expose a range of data without having to necessarily know/process the multitude of individual web service addresses.   Web service providers could *cache* both specific and/or aggregate responses for common repeated requests to increase efficiency/response time. 
  * *zipped xml* as a possible request/return format(since the data bloat of xml is repetitous tags to begin with)
 
In any technical case down the road it would be great to get audience/customer *feedback* on how these services/formats are being utilized(or not) to guide their development.