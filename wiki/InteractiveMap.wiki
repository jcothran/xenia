#summary Technical Details of the Interactive Map

<wiki:toc max_depth="6" />

= Introduction =

The Secoora Interactive map is a !JavaScript driven mapping engine using [http://www.openlayers.org OpenLayers], [http://www.geoext.org GeoEXT], and [http://www.extjs.com ExtJS] !JavaScript libraries. 
The [http://highcharts.com/ Highcharts] library provides the graphing capability used on the observation popup windows.


= Setup =
The files and directory are structured as follows:
{{{
|
-interactive_map.html
-lib
 |-ExtJS-3.3.0
 |-GeoExt-1.0
 |-OpenLayers-2.10
 |-Highcharts
 |-secoora_interactive.js
 |-olMap1.0.js
 |-ComparisonFilterEx.js
 |-adapter-extjs.js
 |-Ext.ux.HighChart.js
 |-units_conversion.js
-resources
 |-css
  |-ext-all-3-3-0.css
  |-popup.css
  |-mappanel.css
  |-style.css
  |-layout_objects.css
 |-images
   |-data_age
   |-default
   |-help
   |-legend
   |-openlayers
}}}

== File descriptions ==
  * ExtJS-3.3.0 is the directory where the ExtJs files are stored. The files are extracted in the preserving directory hierarchy. 

  * GeoExt-1.0 is the parent directory of the GeoExt library.

  * OpenLayers-2.10 is the parent directory of the Openlayers library.

  * Highcharts is the parent directory of the Highcharts library.

  * interactive_map.html 
  This is the html file that kicks off the creation of the map.

  * secoora_interactive.js
  This is the JavaScript file that creates and manages the map.
  It extends the olMap class found in olMap1.0.js. The addLayers() function is where the WMS layers are added. 

  * olMap1.0.js
  Contains the base class olMap. This class contains basic mapping setup.

  * adapter-extjs.js
  The adapter code needed to get the Highcharts graphing library to work with the ExtJS framework. The original source for the adapter is provided [http://www.sencha.com/forum/showthread.php?93669-Highcharts-adapter-and-plugin-for-ExtJS&highlight=highchartpaneljson here].
  * Ext.ux.HighChart.js
  The Highchart graphing class wrapper. The original source for the wrapper class is provided [http://www.sencha.com/forum/showthread.php?93669-Highcharts-adapter-and-plugin-for-ExtJS&highlight=highchartpaneljson here]. 

  * ComparisonFilterEx.js
  Class ComparisonEx overrides OpenLayers.Filter.Comparison to create the filters used on the map that allow filtering by observations and/or organization. Our platform data comes from a json file, and alot of the attributes are in a hierarchical structure. To filter on some of the properties, such as observation, a function was needed to traverse down to the particular property. The base implementation of Openlayers did not provide this. The function of interest is the recursive function: getAttribute.

  * units_conversion.js
  Natively the observation data is in metric. The unitConverter class allows the on the fly conversion from metric to Impertial. The initial implementation is found on [http://stackoverflow.com/questions/865590/javascript-unit-of-measure-conversion-library Stack Overflow]. Modifications were made to hand Celsius to Fahrenheit conversions.

== Data Sources ==
The map uses a combination of WMS and [http://dev.openlayers.org/releases/OpenLayers-2.10/doc/apidocs/files/OpenLayers/Feature/Vector-js.html Vector Features] to display data.

=== Observing Platforms ===
For the platforms, we use a collection of Vector Features to plot on the map. The Vector Features are contained within a [http://dev.openlayers.org/releases/OpenLayers-2.10/doc/apidocs/files/OpenLayers/Layer/Vector-js.html Vector Layer]. 
==== Platform Vector Data Source ====
The Vector Features are supplied through an JSON [http://neptune.baruch.sc.edu/xenia/feeds/obsjson/mapmeta/platform_callback.json file]. The file is broken up into two main bodies, a lookup table and the platform data. The lookup table is used to reduce the overall file size by having frequently used strings stored only in one place. They are referenced in the platform data through integer indexes. 
===== Platform  Sample Entry =====
  * Platform Entry Sample:
{{{
{
  "type": "Feature",
  "geometry": {
      "coordinates": [-79.620000000000005, 32.799999999999997],
      "type": "Point"
  },
  "properties": {
      "links": {
          "dataQuery": {
              "iconId": 9,
              "id": "carocoops.CAP2.buoy",
              "urlId": 2
          },
          "emailAlert": {
              "iconId": 8,
              "id": "carocoops.CAP2.buoy",
              "urlId": 1
          },
          "geoRSS": {
              "iconId": 10,
              "id": "carocoops_cap2_buoy_GeoRSS_latest.xml",
              "urlId": 3
          },
          "twitter": {
              "iconId": 7,
              "id": "cap2rcoos",
              "urlId": 0
          }
      },
      "orgName": 39,
      "staDataFile": "carocoops:cap2:buoy_data.json",
      "staDataURL": 4,
      "staDesc": "CAROCOOPS CAP2, Capers Island Nearshore, SC",
      "staID": "carocoops.CAP2.buoy",
      "staObs": [{
          "Properties": {
              "obsDisOrd": 1,
              "obsTypeDesc": 5,
              "sorder": 1,
              "uomID": 3
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 2,
              "obsTypeDesc": 3,
              "sorder": 1,
              "uomID": 2
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 3,
              "obsTypeDesc": 1,
              "sorder": 1,
              "uomID": 1
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 4,
              "obsTypeDesc": 2,
              "sorder": 1,
              "uomID": 1
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 5,
              "obsTypeDesc": 4,
              "sorder": 1,
              "uomID": 4
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 6,
              "obsTypeDesc": 22,
              "sorder": 1,
              "uomID": 11
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 25,
              "obsTypeDesc": 6,
              "sorder": 1,
              "uomID": 3
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 30,
              "obsTypeDesc": 28,
              "sorder": 1,
              "uomID": 10
          },
          "type": "feature"
      }, {
          "Properties": {
              "obsDisOrd": 33,
              "obsTypeDesc": 10,
              "sorder": 1,
              "uomID": 13
          },
          "type": "feature"
      }],
      "staTypeImage": 0,
      "staTypeName": "buoy",
      "staURL": "http://nautilus.baruch.sc.edu/carocoops_website/buoy_detail.php?buoy=buoy4"
  }
}
}}}
  * Lookup Table 
  Lookup data that originates from the Xenia DB have entries that mimic the database structure. The database table name is used for a lookup key. Then the row id is used as the identifier in the platform data above. Finally column names are used as a key to point to the data value.
  For example the observation names:
{{{
"obs_type": 
{
  "1": {
    "display": "Wind Speed",
    "standard_name": "wind_speed"
  }
}}}
===== File Creation Script =====
Script: buildPlatformMetadata.sh<br/>
Server: Neptune
Directory: /home/xeniaprod/cron<br/>
Description: Shell script that launches the python script that builds the platform metadata JSON file.<br/>
Shell Script Makeup<br/>

    Script: buildPlatformMetadata.py <br/>
    Directory: <br/>
    Command Line Parameters:<br/>
    --dbName - The name of the xenia database to connect to.<br/>
    --dbHost - The xenia database host address to connect to.<br/>
    --dbUser - The xenia database user name to connect with.<br/>
    --dbPwd - The xenia database password name to connect with.<br/>
    --Polygon - The polygon we want to use to select the platforms.   Format is: long lat, long lat....<br/>
    --JsonPlatformFilepath - The output directory to write the JSON file.<br/>
    --ConversionFile - The XML file with the units conversion formulas.<br/>
    --PlaformSettingsFile - This is the XML file that has various  settings for platforms. A sample of the file can be found Sample can be found [http://code.google.com/p/xenia/source/browse/trunk/postgresql/mapping/platformSettings-template.xml here].<br/>
    --UseJSONCallbackFunc - Set this flag to wrap the JSON in a callback function.<br/>




Schedule: Every 2 hours. <br/>
==== Observation Data Source ====
The observation data is available in JSON files, broken down per platform [http://neptune.baruch.sc.edu/xenia/feeds/obsjson/all/latest_hours_24/ here].

===== Observation Sample Entry =====
{{{
{"type": "Feature",
            "geometry": {
                "type": "MultiPoint",
                "coordinates": [[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3],[-79.62,32.8,3]] 
            },
         "properties": {
            "obsTypeDesc": "air pressure",
            "obsType": "air_pressure",
            "uomType": "mb",
            "sorder": "1",
            "time": ["2011-02-15 16:00:00Z","2011-02-15 17:00:00Z","2011-02-15 18:00:00Z","2011-02-15 19:00:00Z","2011-02-15 20:00:00Z","2011-02-15 21:00:00Z","2011-02-15 22:00:00Z","2011-02-15 23:00:00Z","2011-02-16 00:00:00Z","2011-02-16 01:00:00Z","2011-02-16 02:00:00Z","2011-02-16 03:00:00Z","2011-02-16 04:00:00Z","2011-02-16 05:00:00Z","2011-02-16 06:00:00Z","2011-02-16 07:00:00Z","2011-02-16 08:00:00Z","2011-02-16 09:00:00Z","2011-02-16 10:00:00Z","2011-02-16 11:00:00Z","2011-02-16 12:00:00Z","2011-02-16 13:00:00Z","2011-02-16 14:00:00Z","2011-02-16 15:00:00Z","2011-02-16 16:00:00Z","2011-02-16 17:00:00Z","2011-02-16 18:00:00Z","2011-02-16 19:00:00Z"],
            "value": ["1024.1","1024.4","1024.1","1023.7","1023.6","1023.8","1024.2","1024.4","1024.3","1024.5","1024.4","1024.8","1024.9","1024.6","1024.4","1024.4","1024","1023.6","1023.8","1024.1","1024.3","1024.8","1025.2","1025.5","1025.3","1024.8","1024.2","1023.3"]
        }},

}}}
===== File Creation Script =====
Script: xenia_to_json.pl<br/>
Server: Neptune<br/>
Directory: /home/xeniaprod/scripts/postgresql/import_export<br/>
Description: Script creates the observation JSON files. Each platform has a seperate file. The last 24 hours of observations for the platform are saved. The file naming convention is: organization:platform short name:platform type_data.json<br/> 
Command Line Parameters: No command line parameters, however there are hardcoded paths to note.
  * $target_dir = '/home/xeniaprod/feeds/obsjson/all/latest_hours_24/';
  This is the output directory where the JSON files will be written.
  * my $cfg=Config::IniFiles->new( -file => '/home/xeniaprod/config/dbConfig.ini');
  This is the file containing the connection information for the database.

=== WMS Data Sources ===
A combination of both local and remote WMS layers are used on the map. Locally, [http://mapserver.org Mapserver] is the mapping engine used to host and serve up the WMS data. Both USC and Chapel Hill host local layers using Mapserver.
==== Layers ====
This section will detail the local mapfiles used, as well as any wrapper scripts used during the WMS query.
===== HF Radar =====
  * HF Radar Currents
  _Script:_ [http://trac.secoora.org/visual/browser/mapping/trunk/mapserver/wrappers/currents_rs_wrapper_tst currents_rs_wrapper_tst] <br/>
  _Machine:_ Maury<br/>
  _Directory_: /usr/local/apache2/cgi-bin<br/>
  _Description:_ The HF Radar data is stored in a shapefile. This wrapper is used to created the appropriate file name to pass onto the Mapserver for serving out the tiles. The file naming convention is: year_month_day_hour_00_00.shp. The WMS query provides a layer specific variable, TIME_OFFSET_HOURS which is used in determining the file to use. An offset of 3 hours is used in the map. <br/>
  _Command Line Parameters:_ <br/>
    Normal WMS parameters, plus the following layer specific params:<br/>
    TIME_OFFSET_HOURS - Offset in hours. <br/>
    MAP_SCALEBAR_STATUS - ON or OFF. Used to query scalebar for layer.<br/>
  
  _Mapfile:_ [http://trac.secoora.org/visual/browser/mapping/trunk/mapserver/mapfiles/currents_rs_tst.map currents_rs_tst.map]<br/>
  _Directory_: /opt/secoora_ogc/maps/<br/>

===== Drifters =====
  * Drifters
  _Script:_ [http://trac.secoora.org/visual/browser/mapping/trunk/mapserver/wrappers/drifter_wrapper drifter_wrapper]<br/>
  _Machine:_ Maury<br/>
  _Directory_: /usr/local/apache2/cgi-bin<br/>
  _Description:_ The drifter positions are stored in a database. This wrapper is used to create the current head position of the drifter, then use the TAIL parameter to create the trailing points that show previous drifter positions.<br/>
  _Command Line Parameters:_ <br/>
    Normal WMS parameters, plus the following layer specific params:<br/>
    TIME_OFFSET_HOURS - Offset in hours. Used for time offset in the SQL done in the drifter.map file. This offset is used to query for the latest drifter position(head).<br/>
    TAIL - Specifies the number of days previous to query for to draw the trailing dots on the map behind the head.<br/>

  _Mapfile:_ [http://trac.secoora.org/visual/browser/mapping/trunk/mapserver/mapfiles/drifter.map drifter.map]<br/>
  _Directory_: /opt/secoora_ogc/maps/<br/>

===== Interpolated Sea Surface Temperature =====
  _Mapfile:_ [http://code.google.com/p/xenia/source/browse/trunk/mapping/mapserv/general.map general.map]<br/>
  _Directory_: /home/xeniaprod/mapping/common<br/>
  _Machine:_ Neptune<br/>
===== MODIS SST =====
  _Mapfile:_ [http://code.google.com/p/xenia/source/browse/trunk/mapping/mapserv/general.map general.map]<br/>
  _Directory_: /home/xeniaprod/mapping/common<br/>
  _Machine:_ Neptune<br/>
===== Sea Surface Temperature =====
  _Mapfile:_ [http://code.google.com/p/xenia/source/browse/trunk/mapping/mapserv/general.map general.map]<br/>
  _Directory_: /home/xeniaprod/mapping/common<br/>
  _Machine:_ Neptune<br/>
===== Water Level =====
  _Mapfile:_ [http://code.google.com/p/xenia/source/browse/trunk/mapping/mapserv/general.map general.map]<br/>
  _Directory_: /home/xeniaprod/mapping/common<br/>
  _Machine:_ Neptune<br/>
===== In-Situ Winds =====
  _Mapfile:_ [http://trac.secoora.org/visual/browser/mapping/trunk/mapserver/mapfiles/secoora_insitu.map secoora_insitu.map]<br/>
  _Directory_: /opt/secoora_ogc/maps<br/>
  _Machine:_ Maury<br/>