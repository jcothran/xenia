#summary Development ideas or requests in regards to the Xenia database

A listing of Xenia development ideas in no particular priority order

= 1. Sqlite Xenia + Geoserver =

Currently Geoserver (http://geoserver.com) can connect directly to several popular databases, but not Sqlite that I have seen documented.  Having this path would allow the usual array of formats/products available via Geoserver to also be available via a Sqlite Xenia db instance.

Currently one path might be sqlite -> jdbc -> geoserver , but haven't had a chance to experiment or document this.

sqlite -> jdbc http://www.ch-werner.de/javasqlite/

jdbc -> geoserver http://jira.codehaus.org/browse/GEOT-241 

= 2. Sqlite in-memory performance benchmarking = 

Sqlite allows the amount of memory utilized to be set via the 'PRAGMA default_cache_size' command.  Compare some 'typical' query response times with the db in memory (db size say around 200-500 MB) against a file(disk) based version. 

= 3. conversion script - Seacoos netCDF to obskml =

This would provide a path for existing, future Seacoos netCDF feeds to be available via ObsKML/Xenia also.

= 4. Convert PostgreSQL 'top_of_hour' trigger to Sqlite = 

This would allow the same observation labeling functionality given by the trigger described at http://nautilus.baruch.sc.edu/twiki_dmcc/bin/view/Main/XeniaPackageV2#d_top_of_hour_integer_d_report_h to the Xenia Sqlite version

= 5. conversion script - obskml to obsregistry xml = 

The observation registry effort http://obsregistry.org utilizes a xml formatted feed/harvest.  A conversion script would help supply that feed type and support that effort.

= 6. conversion script - obskml to georss =

GeoRSS associates a description (perhaps changing with time like a weather feed) with an associated latitude, longitude and elevation.  Should be straightforward to convert hourly KML placemarks with table content into separate GeoRSS location feeds.

= 7. documentation of enabling an OGC SOS feed utilizing pySOS + Xenia (sqlite, postgres) =

Bill Howe has developed a python script and configuration files to OGC SOS enable relational databases with 'view' queries configured appropriately http://www.oostethys.org/downloads/sos-cookbook-python

Haven't gone through the Xenia specific steps to enable this type of service but want to and provide documentation.