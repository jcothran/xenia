_Implementation of Xenia OOSTethys SOS Perl server on NANOOS Xenia RDB_

= NANOOS Xenia OOSTethys SOS Perl server =

== Background ==

We are implementing GoMOOS/Eric Bridger's [http://code.google.com/p/oostethys/source/browse/#svn/trunk/component/server/perl Perl SOS server (oostethys_sos.cgi)] on the NANOOS Xenia data base we're developing at APL. This SOS server is currently only running within our firewall at APL, for testing purposes.

While the code I've adapted originally came from Eric, I got it via Jeremy Cothran (SECOORA) and Xiaoyin Qi (Carolinas RCOOS); this code is available at [http://code.google.com/p/xenia/wiki/XeniaSOS Jeremy's Xenia repository]. They made [http://groups.google.com/group/xeniavm/browse_thread/thread/37618beca6d0a159 some adaptations to Eric's code for PostgreSQL-Xenia] which made it easier to get going.

Jeremy has extensive comments and discussions on this server on [http://code.google.com/p/xenia/wiki/XeniaSOS his Xenia SOS page]. oostethys_sos.cgi implements the OOSTethys SOS flavor, not the DIF flavor. Jeremy has a separate Perl SOS server that implements DIF SOS (also available from that page).

Our adapted SOS server code will be made available once our SOS service goes operational.

== Brief technical specs ==

I've adapted the Xenia data model for PostgreSQL. It's running on Ubuntu Linux 8.10, with PostgreSQL 8.3.7. Eric's code can use configurations and pull data from a set of XML and ascii files, or do everything by directly querying the database, or a mix of both. Currently I'm relying exclusively on database queries. I've created a Xenia table (_obs_series_cat_) that holds what I call an "observation series catalog" summarizing available platforms, sensors, measurements, locations and data extent (and automatically kept updated); I'm making use of these catalog table for quick summary data extraction from the SOS server.

== Issues identified and already addressed ==

  * [http://groups.google.com/group/xeniavm/browse_thread/thread/dda47881b87e5206# Rick Blair identified a validation error with <sos:eventTime>. After pointing it out to Eric, he provided a solution], which I've implemented.
  * I'm querying _obs_series_cat_ (see above) to extract and populate an accurate start_time. Previously, it was hard-wired to a fixed value.
  * Our Xenia implementation includes observations from ship cruises and buoys. The SOS server is hard-wired to expect moorings. I adapted the code to provide the center point of each cruise program as the boundedBy:Envelope point location.

== Other outstanding issues or decision points ==